name: Django CI

on:
  push:
    branches: [ "testing_branch" ]
  pull_request:
    branches: [ "testing_branch" ]
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: 'Qase API URL'
        required: true
      qase_report:
        description: 'Enabled/disabled reporting to Qase'
        required: true
      qase_project_code:
        description: 'Qase project code'
        required: true
      qase_run_id:
        description: 'Qase Run ID'
        required: true
      qase_run_complete:
        description: 'Qase Run autocomplete'
        required: true
env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{secrets.AGDESK_DB_NAME}}
          POSTGRES_USER: ${{secrets.AGDESK_DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.AGDESK_DB_PASSWORD}}

    steps:
    # - uses: qase-tms/qase-link-run@main
    #   env:
    #     QASE_API_TOKEN: ${{ env.QASE_API_TOKEN}}
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        cd Package_management
        pip install -r requirements.txt
    - name: Run Tests
      env:
        DATABASE_URL: postgres://${{secrets.AGDESK_DB_USER}}:${{secrets.AGDESK_DB_PASSWORD}}@localhost:5432/${{secrets.AGDESK_DB_NAME}}
      run: |
        cd AgDeskDjango
        python manage.py test
